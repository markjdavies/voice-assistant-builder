events {
    worker_connections          1024;
}

 env                            HASS_ACCESS_TOKEN;
 env                            LOCAL_IP_ADDRESS;
http {
    server {
        listen                  80 default_server;
        set_by_lua              $ip_address 'return os.getenv("LOCAL_IP_ADDRESS")';

        location /rhasspy/api/sentences {
            proxy_pass          http://$ip_address:12101/api/sentences;
        }

        location /rhasspy/api/train {
            proxy_pass          http://$ip_address:12101/api/train;
        }

        location /rhasspy/api/restart {
            proxy_pass          http://$ip_address:12101/api/restart;
        }

        location /haconfig/api/file/config {
            proxy_pass          "http://$ip_address:3218/api/file?filename=/hass-config/configuration.yaml";
        }

        location /haconfig/api/file/intents {
            proxy_pass          "http://$ip_address:3218/api/file?filename=/hass-config/intents.yaml";
        }

        location /haconfig/api/newfile {
            proxy_pass          http://$ip_address:3218/api/newfile;
        }

        location /haconfig/api/save {
            proxy_pass          http://$ip_address:3218/api/save;
        }

        location /haas/api/services/homeassistant/restart {
            proxy_pass          http://$ip_address:8123/api/services/homeassistant/restart;
            set_by_lua          $token 'return os.getenv("HASS_ACCESS_TOKEN")';
            proxy_set_header    Authorization "Bearer $token" ;
        }

        location /mqtt {
            proxy_pass          http://$ip_address:9001;
            proxy_http_version  1.1;
            proxy_set_header    Upgrade $http_upgrade;
            proxy_set_header    Connection "upgrade";
            proxy_set_header    Host $http_host;
            proxy_set_header    X-Real-IP $remote_addr;
        }

        location / {
            proxy_pass          http://$ip_address:3000;
        }

    }
}